/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package hr.algebra;

import hr.algebra.dal.RepoFactory;
import hr.algebra.dal.Repository;
import hr.algebra.model.MovieArchive;
import hr.algebra.model.UserType;
import hr.algebra.utils.JAXBUtils;
import java.util.logging.Level;
import java.util.logging.Logger;

/**
 *
 * @author lukak
 */
public class GeneralFrame extends javax.swing.JFrame {
    
    private Repository movieRepo;


     private static final String UPLOAD_MOVIES = "Upload movies";
     private static final String EDIT_MOVIES="Edit movies";
     private static final String EDIT_PERSONS="Edit persons";
     private static final String FAVOURITE_MOVIES="Favourite movies";
     
     private static final String ARHIVEXML="arhive.txt";
     
    /**
     * Creates new form GeneralFrame
     */
    public GeneralFrame(UserType userType) throws Exception {
        initComponents();
        initRepo();
        configurePanels(userType);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        tpContent = new javax.swing.JTabbedPane();
        jMenuBar1 = new javax.swing.JMenuBar();
        menuCinestar = new javax.swing.JMenu();
        miXML = new javax.swing.JMenuItem();
        miExit = new javax.swing.JMenuItem();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        menuCinestar.setBorder(null);
        menuCinestar.setMnemonic('C');
        menuCinestar.setText("CINESTAR");

        miXML.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_X, java.awt.event.InputEvent.CTRL_MASK));
        miXML.setBackground(java.awt.Color.blue);
        miXML.setText("XML");
        miXML.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                miXMLActionPerformed(evt);
            }
        });
        menuCinestar.add(miXML);

        miExit.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_E, java.awt.event.InputEvent.CTRL_MASK));
        miExit.setBackground(new java.awt.Color(255, 0, 51));
        miExit.setText("EXIT");
        miExit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                miExitActionPerformed(evt);
            }
        });
        menuCinestar.add(miExit);

        jMenuBar1.add(menuCinestar);

        setJMenuBar(jMenuBar1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(tpContent, javax.swing.GroupLayout.DEFAULT_SIZE, 1200, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(tpContent, javax.swing.GroupLayout.DEFAULT_SIZE, 759, Short.MAX_VALUE)
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void miXMLActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_miXMLActionPerformed
        try {
            JAXBUtils.save(new MovieArchive(movieRepo.select()), ARHIVEXML);
        } catch (Exception ex) {
            Logger.getLogger(GeneralFrame.class.getName()).log(Level.SEVERE, null, ex);
        }
     
    }//GEN-LAST:event_miXMLActionPerformed

    private void miExitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_miExitActionPerformed
        System.exit(0);
    }//GEN-LAST:event_miExitActionPerformed

    /**
     * @param args the command line arguments
     */
    

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JMenu menuCinestar;
    private javax.swing.JMenuItem miExit;
    private javax.swing.JMenuItem miXML;
    private javax.swing.JTabbedPane tpContent;
    // End of variables declaration//GEN-END:variables

    private void configurePanels(UserType userType) throws Exception {
        if (userType.equals(UserType.ADMIN)) {
           tpContent.add(UPLOAD_MOVIES, new UploadMoviesPanel());
        }
        else{
            tpContent.add(EDIT_MOVIES, new EditMoviesPanel());
            tpContent.add(EDIT_PERSONS, new EditPersonsPanel());
            tpContent.add(FAVOURITE_MOVIES, new FavouriteMoviesPanel());
            
        }
    }

    private void initRepo() throws Exception {
        movieRepo=RepoFactory.getMovieRepo();    
    }
   
}
